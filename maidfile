# imports go at the top of the file (in toml)
[env]
BOOL = false
STRING = 'test'
TYPE = '%{dir.home} %{env.STRING} %{arg.1}'
ARR = ['hello', 'world']
VERSION='0.3.0'

# hidden tasks (can also hide with `hide = true`)
[tasks._build_macos]
script = [
"cargo build --release", 
"mv target/release/exact-maid build/maid",
"zip build/maid_%{env.VERSION}_darwin_amd64.zip build/maid",
"rm build/maid",
]

[tasks._build_linux]
script = [
"cargo build --release --target x86_64-unknown-linux-musl", 
"mv target/release/exact-maid build/maid",
"zip build/maid_%{env.VERSION}_linux_amd64.zip build/maid",
"rm build/maid",
]

[tasks._build_windows]
script = [
"cargo build --release --target x86_64-pc-windows-gnu", 
"mv target/release/exact-maid build/maid",
"zip build/maid_%{env.VERSION}_windows_amd64.zip build/maid",
"rm build/maid",
]

# tasks in table format
[tasks]
# build tasks
clean = { info = "remove binary", script = "rm maid" }
build = { info = "build maid", script = ["cargo build --release", "mv target/release/exact-maid maid"] }
crates = { path="crates/server", info = "build maid crates", script = ["cargo build --release", "mv target/release/maid_server ."] }
buildall = { info = "build all", script = ["rm -rf build", "mkdir build", "maid _build_macos", "maid _build_linux", "maid _build_windows"] }

# testing
test = { script = "echo hello world" }
debug = { info = "debug env", path="src", script = ["echo %{env.BOOL}", "echo %{env.STRING}", "echo %{arg.1}", "echo %{dir.current}", "echo %{dir.home}", "echo %{env.TYPE}", "echo %{env.ARR}", "echo %{os.platform}", "echo %{os.arch}"] }
broken = { info = "bad task", script = ["this_does_not_exist"] }