{
	env: {
		ARR: ['hello', 'world'],
		BOOL: false,
		STRING: 'test',
		TYPE: '%{dir.home} %{env.STRING} %{arg.1}',
		VERSION: '0.3.0',
	},
	project: {
		server: {
			token: 'test_token',
			address: {
				ip: 'localhost',
				port: 3500,
				ssl: false,
			},
		},
	},
	tasks: {
		_build_linux: {
			script: [
				'cargo build --release --target x86_64-unknown-linux-musl',
				'mv target/release/exact-maid build/maid',
				'zip build/maid_%{env.VERSION}_linux_amd64.zip build/maid',
				'rm build/maid',
			],
		},
		_build_macos: {
			script: [
				'cargo build --release',
				'mv target/release/exact-maid build/maid',
				'zip build/maid_%{env.VERSION}_darwin_amd64.zip build/maid',
				'rm build/maid',
			],
		},
		_build_windows: {
			script: [
				'cargo build --release --target x86_64-pc-windows-gnu',
				'mv target/release/exact-maid build/maid',
				'zip build/maid_%{env.VERSION}_windows_amd64.zip build/maid',
				'rm build/maid',
			],
		},
		broken: {
			info: 'bad task',
			script: ['this_does_not_exist'],
		},
		build: {
			info: 'build maid',
			script: ['cargo build --release', 'mv target/release/exact-maid maid'],
			cache: {
				path: 'src',
				target: 'maid',
			},
		},
		buildall: {
			info: 'build all',
			script: ['rm -rf build', 'mkdir build', 'maid _build_macos', 'maid _build_linux', 'maid _build_windows'],
		},
		clean: {
			info: 'remove binary',
			script: 'rm maid',
		},
		crates: {
			info: 'build maid crates',
			path: 'crates/server',
			script: ['cargo build --release', 'mv target/release/maid_server .'],
		},
		debug: {
			info: 'debug env',
			path: 'src',
			script: [
				'echo %{env.BOOL}',
				'echo %{env.STRING}',
				'echo %{arg.1}',
				'echo %{dir.current}',
				'echo %{dir.home}',
				'echo %{env.TYPE}',
				'echo %{env.ARR}',
				'echo %{os.platform}',
				'echo %{os.arch}',
			],
		},
		dep1: {
			hide: true,
			script: 'sleep 3',
		},
		dep2: {
			hide: true,
			script: 'sleep 3',
		},
		exit: {
			script: 'exit_test 1',
		},
		'exit bad': {
			script: ['exit_test 0', 'exit_test 1', 'exit_test 2'],
		},
		'exit good': {
			script: ['exit_test 2', 'exit_test 1', 'exit_test 0'],
		},
		hidden: {
			hide: true,
			script: 'echo hidden',
		},
		test: {
			depends: ['dep1', 'dep2'],
			script: 'echo hello world',
		},
	},
}
